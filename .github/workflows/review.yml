name: Review

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: ${{ github.ref }}

jobs:

  ##############################################################################
  ## BUILD AND REGISTER APP IMAGE
  ##############################################################################
  register:
    name: Build & Register application
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@master
      with:
        project: ${{ env.project }}
        imageName: ${{ env.project }}/app
        token: ${{ secrets.GITHUB_TOKEN }}

  ##############################################################################
  ## BUILD AND REGISTER HASURA IMAGE
  ##############################################################################
  register-hasura:
    name: Build & Register Hasura
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@master
      with:
        project: ${{ env.project }}
        dockerfile: hasura/Dockerfile
        token: ${{ secrets.GITHUB_TOKEN }}
        imageName: ${{ env.project }}/hasura

  ##############################################################################
  ## GENERATE KUBERNETES MANIFESTS
  ##############################################################################
  manifests:
    name: Generate k8s manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/k8s-manifests@master
      with:
        environment: "dev"

  # manifests:
  #   name: Generate k8s manifests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Load review environment variables
  #       run: |
  #         cat ".github/dev.env" >> $GITHUB_ENV

  #     - name: Yarn cache setup
  #       uses: c-hive/gha-yarn-cache@v2

  #     - name: Install kosko-charts dependencies
  #       run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

  #     - name: Generate k8s manifests
  #       run: yarn --cwd .k8s --silent generate:dev > manifests-dev.yml
  #       env:
  #         SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #     - name: Generate k8s namespace
  #       run: yarn --cwd .k8s --silent generate:dev _namespace > namespace-dev.yml
  #       env:
  #         SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #     - name: Generate restore-db job manifest
  #       run: yarn --cwd .k8s --silent generate:dev jobs/restore > restore-db.yml
  #       env:
  #         SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #     - name: Archive k8s manifests
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: manifests-dev.yml
  #         path: manifests-dev.yml

  #     - name: Archive k8s namespace
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: namespace-dev.yml
  #         path: namespace-dev.yml

  #     - name: Archive restore-db job
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: restore-db.yml
  #         path: restore-db.yml

  ##############################################################################
  ## DEPLOY BACKEND & FRONT-END
  ##############################################################################
  deploy:
    name: Deploy application
    runs-on: ubuntu-latest
    needs: [register, register-hasura, manifests]
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@master
      with:
        environment: "dev"
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }}

  ##############################################################################
  ## RESTORE DATABASE
  ##############################################################################
  restore-db:
    name: Restore database
    runs-on: ubuntu-latest
    needs: deploy
    steps:

    - uses: SocialGouv/actions/k8s-restore-db@k8s-restore-db
      with:
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }}

  #   - name: Download k8s namespace
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: namespace-dev.yml

  #   - name: Download restore-db job
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: restore-db.yml

  #   - name: Get namespace name
  #     uses: mikefarah/yq@master
  #     id: namespace
  #     with:
  #       cmd: yq eval '.metadata.name' namespace-dev.yml

  #   - name: Create kubernetes config
  #     run: |
  #       mkdir ~/.kube
  #       touch ~/.kube/config
  #       echo ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }} | base64 -d > ~/.kube/config

  #   - name: Seed database
  #     run: |
  #       kubectl delete -f restore-db.yml --namespace ${{ steps.namespace.outputs.result }} || true
  #       kubectl apply -f restore-db.yml --namespace ${{ steps.namespace.outputs.result }}
