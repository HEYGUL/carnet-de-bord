name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: preproduction
  cancel-in-progress: true

jobs:

  ##############################################################################
  ## BUILD AND REGISTER APPLICATION IMAGE
  ##############################################################################
  register:
    name: Build & Register application
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@master
      with:
        project: ${{ env.project }}
        imageName: ${{ env.project }}/app
        token: ${{ secrets.GITHUB_TOKEN }}

  ##############################################################################
  ## BUILD AND REGISTER HASURA IMAGE
  ##############################################################################
  register-hasura:
    name: Build & Register Hasura
    runs-on: ubuntu-latest
    steps:

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Use autodevops build and register
      uses: SocialGouv/actions/autodevops-build-register@master
      with:
        project: ${{ env.project }}
        dockerfile: hasura/Dockerfile
        token: ${{ secrets.GITHUB_TOKEN }}
        imageName: ${{ env.project }}/hasura

  ##############################################################################
  ## GENERATE PREPRODUCTION MANIFESTS
  ##############################################################################
  manifests:
    name: Preproduction manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/k8s-manifests@master
      with:
        environment: "preprod"

  # manifests:
  #   name: Generate k8s manifests
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Load review environment variables
  #     run: |
  #       cat ".github/preprod.env" >> $GITHUB_ENV

  #   - name: Yarn cache setup
  #     uses: c-hive/gha-yarn-cache@v2

  #   - name: Install kosko-charts dependencies
  #     run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

  #   - name: Generate k8s manifests
  #     run: yarn --cwd .k8s --silent generate --env preprod > manifests-preprod.yml
  #     env:
  #       SOCIALGOUV_PREPRODUCTION: true
  #       SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #   - name: Generate k8s namespace
  #     run: yarn --cwd .k8s --silent generate --env preprod _namespace > namespace-preprod.yml
  #     env:
  #       SOCIALGOUV_PREPRODUCTION: true
  #       SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #   - name: Archive k8s manifests
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: manifests-preprod.yml
  #       path: manifests-preprod.yml

  #   - name: Archive k8s namespace
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: namespace-preprod.yml
  #       path: namespace-preprod.yml

  ##############################################################################
  ## DEPLOY PREPRODUCTION APPLICATION
  ##############################################################################
  deploy-preprod:
    name: Deploy preproduction
    runs-on: ubuntu-latest
    needs: [register, register-hasura, manifests]
    environment:
      name: preproduction
      url: https://${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:
  
    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@master
      with:
        environment: "preprod"
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_DEV2 }}

  ##############################################################################
  ## GENERATE PRODUCTION MANIFESTS
  ##############################################################################
  manifests-prod:
    name: Production manifests
    runs-on: ubuntu-latest
    steps:

    - name: Use autodevops manifests generation
      uses: SocialGouv/actions/k8s-manifests@master
      with:
        environment: "prod"

  # manifests-prod:
  #   name: Generate k8s manifests
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Load review environment variables
  #     run: |
  #       cat ".github/prod.env" >> $GITHUB_ENV

  #   - name: Yarn cache setup
  #     uses: c-hive/gha-yarn-cache@v2

  #   - name: Install kosko-charts dependencies
  #     run: yarn --cwd .k8s install --frozen-lockfile --prefer-offline

  #   - name: Generate k8s manifests
  #     run: yarn --cwd .k8s --silent generate --env prod _namespace > namespace-prod.yml
  #     env:
  #       SOCIALGOUV_PRODUCTION: true
  #       SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #   - name: Generate k8s manifests
  #     run: yarn --cwd .k8s --silent generate --env prod > manifests-prod.yml
  #     env:
  #       SOCIALGOUV_PRODUCTION: true
  #       SOCIALGOUV_BASE_DOMAIN: ${{ env.SOCIALGOUV_BASE_DOMAIN }}

  #   - name: Archive k8s manifests
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: manifests-prod.yml
  #       path: manifests-prod.yml

  #   - name: Archive k8s namespace
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: namespace-prod.yml
  #       path: namespace-prod.yml

  ##############################################################################
  ## DEPLOY PRODUCTION APPLICATION
  ##############################################################################
  deploy-prod:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: [deploy-preprod, manifests-prod]
    environment:
      name: production
      url: https://${{ env.namespace }}.${{ env.SOCIALGOUV_BASE_DOMAIN }}
    steps:

    - name: Use autodevops deployment
      uses: SocialGouv/actions/autodevops-deploy@master
      with:
        environment: "prod"
        token: ${{ secrets.GITHUB_TOKEN }}
        kubeconfig: ${{ secrets.SOCIALGOUV_KUBE_CONFIG_PROD }}
